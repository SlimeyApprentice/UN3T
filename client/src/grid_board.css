/* Height: 67px
Width: 70px */

:root {
    /* --color-2: rgb(87.89,227.98,179.19);
    --color-1: rgb(34.77,12.31,39.66); */
    /* --color-1: rgb(49.833% 0.4817% 15.448%); */

    --opacity: 20%;
    --padding: 6px;
    --cell-padding: 3px;


    /* Unfortunately these don't actually control color of the pieces */
    --color-1: rgba(236, 0, 71, 100%);
    --color-2: rgb(26, 187, 225);
    --color-3: rgb(0, 230, 42);
    --color-1b: rgba(236, 0, 71, var(--opacity));
    --color-2b: rgba(26, 187, 225, var(--opacity));
    --color-3b: rgb(0, 230, 42, var(--opacity));

    width: 100vw;
}
/* BOARD AND BORDER SIZE ARE NOW HANDLED INSIDE OF APP.JSX */

body {
    width: 100%;
    height: 100vh;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    overflow: hidden;
}
.game {
    display: flex;
    flex-direction: row;
    width: 100vw;

    justify-content: center;
}

.off {
    display: none;
    visibility: collapse;
}

.react-transform-wrapper {
    width: 85vmin;
    aspect-ratio: 1;
    /* border: 2px solid red; */
    box-shadow: 0px 0px 5px rgb(255, 0, 0);
}
.react-transform-component {
    height: 100%;
    aspect-ratio: 1;
}

.active-board:hover {
    background-color: rgba(119, 136, 153, 0.165);
}

/* This horrendous CSS mishap has been fixed to the tune of Young Girl A */
/* The issue was width fit-content as opposed to 100% */
/* .game-wrapper {
    width: 100%;
    aspect-ratio: 1;
} */

.board {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr;

    flex-grow: 1;

    box-sizing: border-box;

    /* width: 100%;
    height: 100%; */

    padding: 4px;
}
.cell {
    display: flex;
    justify-content: center;
    
    box-sizing: border-box;

    background-color: transparent;
    border: none;

    font-family: monospace;
    font-weight: bold;
    text-align: center;
    /* padding: var(--cell-padding); */
    /* padding: 2px; */

    /* justify-content: center; */
    /* align-items: stretch; */
}

.board:nth-child(2),
.board:nth-child(3),
.board:nth-child(4),
.cell:nth-child(2),
.cell:nth-child(3),
.cell:nth-child(4) {
  border-bottom: var(--border-size) solid black;
  padding-bottom: 0px;
}

.board:nth-child(8),
.board:nth-child(9),
.board:nth-child(10),
.cell:nth-child(8),
.cell:nth-child(9),
.cell:nth-child(10) {
  border-top: var(--border-size) solid black;
  padding-top: 0px;
}

.board:nth-child(2),
.board:nth-child(5),
.board:nth-child(8),
.cell:nth-child(2),
.cell:nth-child(5),
.cell:nth-child(8) {
  border-right: var(--border-size) solid black;
  padding-right: 0px;
  margin-right: 2px;
}

.board:nth-child(4),
.board:nth-child(7),
.board:nth-child(10),
.cell:nth-child(4),
.cell:nth-child(7),
.cell:nth-child(10) {
  border-left: var(--border-size) solid black;
  padding-left: 0px;
}

.move {
    width: 100%;
    height: 100%;
}
.dummy-move {
    /* visibility: none; */
    background-color: red;
    aspect-ratio: 1;
}


/* Managed in code */
.game-wrapper {
    /* display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr; */
}
.game-wrapper > .board {
    border: var(--border-size) solid rgb(0, 0, 0);
    
    padding: var(--padding);
}
.game-wrapper > #top-board {
    border-bottom: none;
}
.game-wrapper > #bottom-board {
    border-top: none;
}
.game-wrapper > #right-board {
    border-left: none;
}
.game-wrapper > #left-board {
    border-right: none;
}

.win-container-active {
    display: inline-flex;
    position: relative;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    /* color: var(--color-1); */
    /* z-index: 10; */
    /* ^^^^ Handled by JS */
    flex: 1;
}

.X, .O, .D {
    position: absolute;
    text-align: center;
    height: calc(var(--padding)*2 + var(--board-size));
    width: calc(var(--padding)*2 + var(--board-size));
    top: calc(var(--padding) * -1);
}

.X {
    color: var(--color-1);
}
.board:has(> .win-container > .X) {
    background-color: var(--color-1b);
}

.O {
    color: var(--color-2);
}
.board:has(> .win-container > .O) {
    background-color: var(--color-2b);
}

.D {
    color: var(--color-3);
}
.board:has(> .win-container > .D) {
    background-color: var(--color-3b);
}