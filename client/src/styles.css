/* Height: 67px
Width: 70px */

:root {
    /* --color-2: rgb(87.89,227.98,179.19);
    --color-1: rgb(34.77,12.31,39.66); */
    /* --color-1: rgb(49.833% 0.4817% 15.448%); */

    --opacity: 20%;
    --padding: 8px;
    --cell-padding: 3px;


    /* Unfortunately these don't actually control color of the pieces */
    --color-1: rgba(236, 0, 71, 100%);
    --color-2: rgb(26, 187, 225);
    --color-3: rgb(0, 230, 42);
    --color-1b: rgba(236, 0, 71, var(--opacity));
    --color-2b: rgba(26, 187, 225, var(--opacity));
    --color-3b: rgb(0, 230, 42, var(--opacity));
}
/* BOARD AND BORDER SIZE ARE NOW HANDLED INSIDE OF APP.JSX */

body {
    width: 100%;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
}

.off {
    display: none;
}

.react-transform-wrapper {
    width: 85vmin;
    aspect-ratio: 1;
    /* border: 2px solid red; */
    box-shadow: 0px 0px 5px rgb(255, 0, 0);
}
.react-transform-component {
    height: 100%;
    aspect-ratio: 1;
}

.board {
    /* We'll see if inline-flex is necessary when we get to win images */
    display: flex; 
    flex-direction: column;
    box-sizing: border-box;
    justify-content: center;
    align-items: center;

    /* width: 100%;
    height: 100%; */

    aspect-ratio: 1/1;
    position: relative;
    padding: var(--padding);
}
/* Currently manually writing padding for depths  */
/* .depth-0 {
    padding: var(--padding/2.5);
} 
.depth-1 {
    padding: calc(var(--padding)/2);
} 
.depth-2 {
    padding: calc(var(--padding)/2);
} 
.depth-3 {
    padding: calc(var(--padding)/1.5);
}  */

/* This horrendous CSS mishap has been fixed to the tune of Young Girl A */
/* The issue was width fit-content as opposed to 100% */
/* .game-wrapper {
    width: 100%;
    aspect-ratio: 1;
} */

.game-wrapper > .board {
    border: var(--border-size) solid rgb(0, 0, 0);
}
.game-wrapper > #top-board {
    border-bottom: none;
}
.game-wrapper > #bottom-board {
    border-top: none;
}
.game-wrapper > #right-board {
    border-left: none;
}
.game-wrapper > #left-board {
    border-right: none;
}

.active-board:hover {
    background-color: rgba(119, 136, 153, 0.165);
}

.cell {
    display: flex;
    justify-content: center;
    
    box-sizing: border-box;

    background-color: transparent;
    border: none;

    font-family: monospace;
    font-weight: bold;
    text-align: center;
    padding: var(--cell-padding);
    /* padding: 0px; */

    aspect-ratio: 1/1;
    /* width: calc(round(33%, 5px)); */
    /* width: 33%; */
    /* font-family:'Courier New', Courier, monospace; */
}

.board:nth-child(2) {
    border-left: var(--border-size) solid rgb(0, 0, 0);
    border-right: var(--border-size) solid rgb(0, 0, 0);
    padding-left: calc(var(--padding) - var(--border-size));
    padding-right: calc(var(--padding) - var(--border-size));
}

.board-row {
    width: inherit;
    display: flex;
    flex-direction: row;
    /* height: calc(round(33%, 5px) - 2px); */
    /* height: 33%; */
    height: 33%;
    aspect-ratio: 1/3;
}

.top-row {
    border-bottom: var(--border-size) solid rgb(0, 0, 0);
}
.center-row {
    /* margin-top: calc(var(--border-size)/2);
    margin-bottom: calc(var(--border-size)/2); */
}
.bottom-row {
    border-top: var(--border-size) solid rgb(0, 0, 0);
}

.cell:nth-child(2) {
    border-left: var(--border-size) solid rgb(0, 0, 0);
    border-right: var(--border-size) solid rgb(0, 0, 0);
    /* padding-left: calc(var(--cell-padding) - var(--border-size));
    padding-right: calc(var(--cell-padding) - var(--border-size)); */
}

.win-container-active {
    display: inline-flex;
    position: relative;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    /* color: var(--color-1); */
    /* z-index: 10; */
    /* ^^^^ Handled by JS */
    flex: 1;
}

.X, .O, .D {
    position: absolute;
    text-align: center;
    height: calc(var(--padding)*2 + var(--board-size));
    width: calc(var(--padding)*2 + var(--board-size));
    top: calc(var(--padding) * -1);
}

.X {
    color: var(--color-1);
}
.board:has(> .win-container > .X) {
    background-color: var(--color-1b);
}

.O {
    color: var(--color-2);
}
.board:has(> .win-container > .O) {
    background-color: var(--color-2b);
}

.D {
    color: var(--color-3);
}
.board:has(> .win-container > .D) {
    background-color: var(--color-3b);
}